// *** KafkaSample - Consumer ***

// SCRIPT
buildscript {
	ext {
//		springBootVersion = '1.5.9.RELEASE'
		springBootVersion = '2.0.1.RELEASE'
//		springKafkaVersion = '1.3.2.RELEASE'
		springKafkaVersion = '2.1.5.RELEASE'
		slf4jVersion = '1.7.25'
		lombokVersion = '1.16.18'
		dockerPluginVersion = '1.2'
	}

	repositories {
		mavenCentral()

		// Milestones & Snapshots
		maven { url 'http://repo.spring.io/libs-release' }
		maven { url 'http://repo.spring.io/libs-milestone' }
		maven { url 'http://repo.spring.io/libs-snapshot' }
	}

	dependencies {
		classpath group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: "${springBootVersion}"
		classpath group: 'se.transmode.gradle', name: 'gradle-docker', version: "${dockerPluginVersion}"
	}
}

// PLUGINS
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

// COMPILING
group 'com.rabbitshop.kafkasample'
version '0.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
	baseName = 'kafkaconsumer'
	version = '0.1'
}

// Option to incrementally compile java (only modified files will be re-compiled)
compileJava {
	options.fork = true
	options.incremental = true
	// Build feature: reveal specific warnings during compilation
	options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'
}

// REPOS
repositories {
	mavenCentral()

	// Milestones & Snapshots
	maven { url 'http://repo.spring.io/libs-release' }
	maven { url 'http://repo.spring.io/libs-milestone' }
	maven { url 'http://repo.spring.io/libs-snapshot' }
}

// DEPENDENCIES
dependencies {

	// Other test projects
	compile project(':kafkacommons')

	// Spring Boot
	compile group: 'org.springframework.boot', name: 'spring-boot-starter', version: "${springBootVersion}"

	// Spring Kafka
	compile group: 'org.springframework.kafka', name: 'spring-kafka', version: "${springKafkaVersion}"

	// Spring Web
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: "${springBootVersion}"

	// Slf4j
	compile group: 'org.slf4j', name: 'slf4j-api', version: "${slf4jVersion}"

	// Lombok
	compileOnly group: 'org.projectlombok', name: 'lombok', version: "${lombokVersion}"

	// Testing
	testCompile group: 'org.springframework.kafka', name: 'spring-kafka-test', version: "${springKafkaVersion}"
}

// TASKS
task wrapper(type: Wrapper) {
	gradleVersion = '4.2.1'
}

task image(type: Docker, dependsOn: build) {
	push = false
	applicationName = jar.baseName
	dockerfile = file('src/main/docker/Dockerfile')
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}
